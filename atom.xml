<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知</title>
  <subtitle>Just do it!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jzman.duoshuo.com/"/>
  <updated>2017-05-16T18:02:41.493Z</updated>
  <id>http://jzman.duoshuo.com/</id>
  
  <author>
    <name>jzman</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何为RecyclerView添加单击事件？</title>
    <link href="http://jzman.duoshuo.com/2017/05/17/%E5%A6%82%E4%BD%95%E4%B8%BARecyclerView%E6%B7%BB%E5%8A%A0%E5%8D%95%E5%87%BB%E4%BA%8B%E4%BB%B6%EF%BC%9F/"/>
    <id>http://jzman.duoshuo.com/2017/05/17/如何为RecyclerView添加单击事件？/</id>
    <published>2017-05-16T17:48:16.000Z</published>
    <updated>2017-05-16T18:02:41.493Z</updated>
    
    <content type="html"><![CDATA[<p>RecyclerView 的每个Item的点击事件并没有像ListView一样封装在组件中，需要Item的单击事件时就需要自己去实现，在Adapter中为RecyclerView添加单击事件参考如下：</p>
<p>RecyclerView的使用方法请参考：<a href="https://jzmanu.github.io/2017/05/14/RecyclerRiew%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/#more" target="_blank" rel="external">RecyclerView的简单使用</a></p>
<h4 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h4><p>在RecyclerView的Adapyer中定义单击事件的回调接口：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 定义RecyclerView选项单击事件的回调接口</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span></span>&#123;</div><div class="line">    <span class="comment">//参数（父组件，当前单击的View,单击的View的位置，数据）</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(RecyclerView parent,View view, <span class="keyword">int</span> position, String data)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h4><p>在RecyclerView的Adapyer中声明该接口，并提供setter方法：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> OnItemClickListener onItemClickListener;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener onItemClickListener)</span></span>&#123;</div><div class="line">    <span class="keyword">this</span>.onItemClickListener = onItemClickListener;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h4><p>在RecyclerView的Adapyer类实现View.OnClickListener接口，并重写onClick(View view)方法，然后设置给接口的事件监听：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RvAdapter1</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RvAdapter1</span>.<span class="title">DataViewHolder</span>&gt; <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</div><div class="line">    ...</div><div class="line">    view.setOnClickListener(<span class="keyword">this</span>);<span class="comment">//设置监听器</span></div><div class="line">    ...</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="comment">//根据RecyclerView获得当前View的位置</span></div><div class="line">        <span class="keyword">int</span> position = recyclerView.getChildAdapterPosition(view);</div><div class="line">        <span class="comment">//程序执行到此，会去执行具体实现的onItemClick()方法</span></div><div class="line">        <span class="keyword">if</span> (onItemClickListener!=<span class="keyword">null</span>)&#123;</div><div class="line">            onItemClickListener.onItemClick(recyclerView,view,position,mList.get(position));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第四步："><a href="#第四步：" class="headerlink" title="第四步："></a>第四步：</h4><p>在MainActivity中通过Adapter设置每个Item的单击事件：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">adapter.setOnItemClickListener(<span class="keyword">new</span> RvAdapter1.OnItemClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(RecyclerView parent, View view, <span class="keyword">int</span> position, String data)</span> </span>&#123;</div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, data, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h4><h5 id="Adapter"><a href="#Adapter" class="headerlink" title="Adapter"></a>Adapter</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by jzman on 2017/5/13 0013.</div><div class="line"> * RecycleView的Adapter</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RvAdapter1</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RvAdapter1</span>.<span class="title">DataViewHolder</span>&gt; <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> Context mContext;</div><div class="line">    <span class="keyword">private</span> RecyclerView recyclerView;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; mList;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RvAdapter1</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RvAdapter1</span><span class="params">(Context mContext, ArrayList&lt;String&gt; mList)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mContext = mContext;</div><div class="line">        <span class="keyword">this</span>.mList = mList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 用于创建ViewHolder</div><div class="line">     * <span class="doctag">@param</span> parent</div><div class="line">     * <span class="doctag">@param</span> viewType</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> DataViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.item,<span class="keyword">null</span>);</div><div class="line">        view.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        <span class="comment">//使用代码设置宽高（xml布局设置无效时）</span></div><div class="line">        view.setLayoutParams(<span class="keyword">new</span> ViewGroup.LayoutParams(</div><div class="line">                ViewGroup.LayoutParams.MATCH_PARENT,</div><div class="line">                ViewGroup.LayoutParams.WRAP_CONTENT));</div><div class="line">        DataViewHolder holder = <span class="keyword">new</span> DataViewHolder(view);</div><div class="line">        <span class="keyword">return</span> holder;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 绑定数据</div><div class="line">     * <span class="doctag">@param</span> holder</div><div class="line">     * <span class="doctag">@param</span> position</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(DataViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        holder.tv_data.setText(mList.get(position));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 选项总数</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mList.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="comment">//根据RecyclerView获得当前View的位置</span></div><div class="line">        <span class="keyword">int</span> position = recyclerView.getChildAdapterPosition(view);</div><div class="line">        <span class="comment">//程序执行到此，会去执行具体实现的onItemClick()方法</span></div><div class="line">        <span class="keyword">if</span> (onItemClickListener!=<span class="keyword">null</span>)&#123;</div><div class="line">            onItemClickListener.onItemClick(recyclerView,view,position,mList.get(position));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 创建ViewHolder</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DataViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</div><div class="line">        TextView tv_data;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DataViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">            tv_data = (TextView) itemView.findViewById(R.id.tv_recycle);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> OnItemClickListener onItemClickListener;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener onItemClickListener)</span></span>&#123;</div><div class="line">        <span class="keyword">this</span>.onItemClickListener = onItemClickListener;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 定义RecyclerView选项单击事件的回调接口</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span></span>&#123;</div><div class="line">        <span class="comment">//参数（父组件，当前单击的View,单击的View的位置，数据）</span></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(RecyclerView parent,View view, <span class="keyword">int</span> position, String data)</span></span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *   将RecycleView附加到Adapter上</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onAttachedToRecyclerView(recyclerView);</div><div class="line">        <span class="keyword">this</span>.recyclerView= recyclerView;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *   将RecycleView从Adapter解除</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDetachedFromRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDetachedFromRecyclerView(recyclerView);</div><div class="line">        <span class="keyword">this</span>.recyclerView = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by jzman on 2017/5/13 0013.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> RecyclerView rv;</div><div class="line">    RvAdapter1 adapter;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        rv = (RecyclerView) findViewById(R.id.rv);</div><div class="line">        <span class="comment">//设置布局管理器</span></div><div class="line"><span class="comment">//        rv.setLayoutManager(new LinearLayoutManager(this));//线性</span></div><div class="line">        rv.setLayoutManager(<span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>,<span class="number">4</span>));<span class="comment">//线性</span></div><div class="line"><span class="comment">//        rv.setLayoutManager(new StaggeredGridLayoutManager(4,StaggeredGridLayoutManager.VERTICAL));//线性</span></div><div class="line">        adapter = <span class="keyword">new</span> RvAdapter1(<span class="keyword">this</span>,initData());</div><div class="line">        adapter.setOnItemClickListener(<span class="keyword">new</span> RvAdapter1.OnItemClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(RecyclerView parent, View view, <span class="keyword">int</span> position, String data)</span> </span>&#123;</div><div class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, data, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        rv.setAdapter(adapter);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;String&gt; <span class="title">initData</span><span class="params">()</span></span>&#123;</div><div class="line">        ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">50</span>;i++)&#123;</div><div class="line">            arrayList.add(<span class="string">"第"</span>+i+<span class="string">"条数据"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> arrayList;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h4><p><img src="http://opvs5q5qo.bkt.clouddn.com/ItemClickForAdapter.gif" alt="image"></p>
<p>&lt;完&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RecyclerView 的每个Item的点击事件并没有像ListView一样封装在组件中，需要Item的单击事件时就需要自己去实现，在Adapter中为RecyclerView添加单击事件参考如下：&lt;/p&gt;
&lt;p&gt;RecyclerView的使用方法请参考：&lt;a href=
    
    </summary>
    
      <category term="RecyclerView" scheme="http://jzman.duoshuo.com/categories/RecyclerView/"/>
    
    
      <category term="Android" scheme="http://jzman.duoshuo.com/tags/Android/"/>
    
      <category term="RecyclerView" scheme="http://jzman.duoshuo.com/tags/RecyclerView/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerRiew的简单使用</title>
    <link href="http://jzman.duoshuo.com/2017/05/14/RecyclerRiew%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://jzman.duoshuo.com/2017/05/14/RecyclerRiew的简单使用/</id>
    <published>2017-05-14T04:38:26.000Z</published>
    <updated>2017-05-14T04:42:58.298Z</updated>
    
    <content type="html"><![CDATA[<p>自从Android 5.0之后，google退出了一个RecyclerView控件，他是support-v7包中的新组件，是一个强大的滑动组件，与经典的ListView相比，同样拥有item回收复用的功能，RecyclerView相当于是ListView的升级版。</p>
<p>RecyclerView封装了ViewHolder的回收复用，也就是说RecyclerView标准化了ViewHolder,编写Adapter面向的是ViewHolder而不是View了，复用的逻辑被封装了，写起来更加简单。</p>
<p>RecyclerView提供一种插拔式的体验，高度的解耦，异常的灵活，针对一个Item的显示RecyclerView专门抽取了相应的类，来控制Item的显示，使其的扩展性特别强。</p>
<h4 id="引入RecyclerVIew"><a href="#引入RecyclerVIew" class="headerlink" title="引入RecyclerVIew"></a>引入RecyclerVIew</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.android.support:recyclerview-v7:25.1.0'</span></div></pre></td></tr></table></figure>
<h4 id="创建布局文件"><a href="#创建布局文件" class="headerlink" title="创建布局文件"></a>创建布局文件</h4><h5 id="主布局文件"><a href="#主布局文件" class="headerlink" title="主布局文件"></a>主布局文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">/*activity_main.xml*/</div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.manu.mrecyclerview.MainActivity"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rv"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="Item布局文件"><a href="#Item布局文件" class="headerlink" title="Item布局文件"></a>Item布局文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/*item.xml*/</div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:padding</span>=<span class="string">"5dp"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tv_recycle"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"data"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"#cac3c3"</span></div><div class="line">        <span class="attr">android:padding</span>=<span class="string">"10dp"</span></div><div class="line">        <span class="attr">android:textSize</span>=<span class="string">"20sp"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="创建Adapter"><a href="#创建Adapter" class="headerlink" title="创建Adapter"></a>创建Adapter</h4><p>RecyclerView的Adapter要比ListView的Adapter设置起来稍微复杂一点，这也是RecyclerView高度解耦的体现，虽然代码复杂一点，但扩展性很好，下面介绍一下实现RecyclerView的Adapter的三个方法：</p>
<h5 id="onCreateViewHolder"><a href="#onCreateViewHolder" class="headerlink" title="onCreateViewHolder()"></a>onCreateViewHolder()</h5><p>该方法主要是为每个Item加载一个View，但是该方法返回的是一个ViewHolder，该方法吧View直接封装的ViewHolder中，然后我们面向的是ViewHolder这个实例，这个ViewHolder也由自己编写，但不用像ListView调用convertView.setTag(vh)和convertView.getTag()了。</p>
<h5 id="onBindViewHolder"><a href="#onBindViewHolder" class="headerlink" title="onBindViewHolder()"></a>onBindViewHolder()</h5><p>该方法主要用来把数据绑定在View上，直接提供一个ViewHolder而不是convertView。</p>
<h5 id="getItemCount"><a href="#getItemCount" class="headerlink" title="getItemCount()"></a>getItemCount()</h5><p>该方法返回选项总数。</p>
<h5 id="Adapter代码"><a href="#Adapter代码" class="headerlink" title="Adapter代码"></a>Adapter代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by jzman on 2017/5/13 0013.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RvAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RvAdapter</span>.<span class="title">DataViewHolder</span>&gt;</span>&#123;</div><div class="line">    <span class="keyword">private</span> Context mContext;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; mList;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RvAdapter</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RvAdapter</span><span class="params">(Context mContext, ArrayList&lt;String&gt; mList)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mContext = mContext;</div><div class="line">        <span class="keyword">this</span>.mList = mList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//用于创建ViewHolder</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> DataViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.item,<span class="keyword">null</span>);</div><div class="line">        <span class="comment">//使用代码设置宽高（xml布局设置无效时）</span></div><div class="line">        view.setLayoutParams(<span class="keyword">new</span> ViewGroup.LayoutParams(</div><div class="line">                ViewGroup.LayoutParams.MATCH_PARENT,</div><div class="line">                ViewGroup.LayoutParams.WRAP_CONTENT));</div><div class="line">        DataViewHolder holder = <span class="keyword">new</span> DataViewHolder(view);</div><div class="line">        <span class="keyword">return</span> holder;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//绑定数据</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(DataViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        holder.tv_data.setText(mList.get(position));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//数据总数</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mList.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//创建ViewHolder</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DataViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</div><div class="line">        TextView tv_data;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DataViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">            tv_data = (TextView) itemView.findViewById(R.id.tv_recycle);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>使用StaggeredGridLayoutManager管理器时，Adapter参考如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by jzman on 2017/5/13 0013.</div><div class="line"> * RecycleView的Adapter</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RvAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RvAdapter</span>.<span class="title">DataViewHolder</span>&gt;</span>&#123;</div><div class="line">    <span class="keyword">private</span> Context mContext;</div><div class="line">    <span class="keyword">private</span> RecyclerView recyclerView;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; mList;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;Integer&gt; mHeight;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RvAdapter</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RvAdapter</span><span class="params">(Context mContext, ArrayList&lt;String&gt; mList)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mContext = mContext;</div><div class="line">        <span class="keyword">this</span>.mList = mList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化每个Item的高度（瀑布流效果）</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">initHeight</span><span class="params">()</span></span>&#123;</div><div class="line">        mHeight = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mList.size();i++)&#123;</div><div class="line">            mHeight.add((<span class="keyword">int</span>) (Math.random()*<span class="number">300</span>)+<span class="number">200</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> mHeight;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 用于创建ViewHolder</div><div class="line">     * <span class="doctag">@param</span> parent</div><div class="line">     * <span class="doctag">@param</span> viewType</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> DataViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        View view = LayoutInflater.from(mContext).inflate(R.layout.item,<span class="keyword">null</span>);</div><div class="line">        <span class="comment">//使用代码设置宽高（xml布局设置无效时）</span></div><div class="line">        view.setLayoutParams(<span class="keyword">new</span> ViewGroup.LayoutParams(</div><div class="line">                ViewGroup.LayoutParams.MATCH_PARENT,</div><div class="line">                ViewGroup.LayoutParams.WRAP_CONTENT));</div><div class="line">        DataViewHolder holder = <span class="keyword">new</span> DataViewHolder(view);</div><div class="line">        <span class="keyword">return</span> holder;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 绑定数据</div><div class="line">     * <span class="doctag">@param</span> holder</div><div class="line">     * <span class="doctag">@param</span> position</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(DataViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="comment">//设置每个Item的高度</span></div><div class="line">        ViewGroup.LayoutParams h = holder.tv_data.getLayoutParams();</div><div class="line">        h.height = mHeight.get(position);</div><div class="line">        holder.tv_data.setText(mList.get(position));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 选项总数</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mList.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 创建ViewHolder</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">DataViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</div><div class="line">        TextView tv_data;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DataViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">            tv_data = (TextView) itemView.findViewById(R.id.tv_recycle);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *   将RecycleView附加到Adapter上</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAttachedToRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onAttachedToRecyclerView(recyclerView);</div><div class="line">        <span class="keyword">this</span>.recyclerView= recyclerView;</div><div class="line">        <span class="comment">//初始化每个Item的高度</span></div><div class="line">        initHeight();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *   将RecycleView从Adapter解除</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDetachedFromRecyclerView</span><span class="params">(RecyclerView recyclerView)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDetachedFromRecyclerView(recyclerView);</div><div class="line">        <span class="keyword">this</span>.recyclerView = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by jzman on 2017/5/13 0013.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> RecyclerView rv;</div><div class="line">    RvAdapter adapter;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        rv = (RecyclerView) findViewById(R.id.rv);</div><div class="line">        <span class="comment">//设置布局管理器</span></div><div class="line">        rv.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>));<span class="comment">//线性</span></div><div class="line"><span class="comment">//        rv.setLayoutManager(new GridLayoutManager(this,4));//线性</span></div><div class="line"><span class="comment">//        rv.setLayoutManager(new StaggeredGridLayoutManager(4,StaggeredGridLayoutManager.VERTICAL));//线性</span></div><div class="line">        adapter = <span class="keyword">new</span> RvAdapter(<span class="keyword">this</span>,initData());</div><div class="line">        rv.setAdapter(adapter);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;String&gt; <span class="title">initData</span><span class="params">()</span></span>&#123;</div><div class="line">        ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">50</span>;i++)&#123;</div><div class="line">            arrayList.add(<span class="string">"第"</span>+i+<span class="string">"条数据"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> arrayList;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h4><table>
<thead>
<tr>
<th>LinearLayoutManager</th>
<th>GridLayoutManager</th>
<th>StaggeredGridLayoutManager</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="http://opvs5q5qo.bkt.clouddn.com/RecyclerView%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8" alt="image"></td>
<td><img src="http://opvs5q5qo.bkt.clouddn.com/RecyclerView_GridLayoutManager" alt="image"></td>
<td><img src="http://opvs5q5qo.bkt.clouddn.com/RecyclerView_StaggeredGridLayoutManager" alt="image">  </td>
</tr>
</tbody>
</table>
<p>&lt;完&gt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从Android 5.0之后，google退出了一个RecyclerView控件，他是support-v7包中的新组件，是一个强大的滑动组件，与经典的ListView相比，同样拥有item回收复用的功能，RecyclerView相当于是ListView的升级版。&lt;/p&gt;

    
    </summary>
    
      <category term="Android" scheme="http://jzman.duoshuo.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://jzman.duoshuo.com/tags/Android/"/>
    
      <category term="RecyclerView" scheme="http://jzman.duoshuo.com/tags/RecyclerView/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://jzman.duoshuo.com/2017/03/08/hello-world/"/>
    <id>http://jzman.duoshuo.com/2017/03/08/hello-world/</id>
    <published>2017-03-07T17:22:14.990Z</published>
    <updated>2017-03-12T06:35:57.630Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
